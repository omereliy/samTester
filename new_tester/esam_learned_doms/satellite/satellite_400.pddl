
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Domain file automatically generated by the Tarski FSTRIPS writer
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (domain satellite)
    (:requirements :typing)
    (:types
        satellite - object
        direction - object
        instrument - object
        mode - object
        object
    )

    (:constants
        
    )

    (:predicates
        (calibrated ?x1 - instrument)
        (calibration_target ?x1 - instrument ?x2 - direction)
        (power_avail ?x1 - satellite)
        (have_image ?x1 - direction ?x2 - mode)
        (power_on ?x1 - instrument)
        (on_board ?x1 - instrument ?x2 - satellite)
        (pointing ?x1 - satellite ?x2 - direction)
        (supports ?x1 - instrument ?x2 - mode)
    )

    (:functions
        
    )

    

    
    (:action switch_off_1
     :parameters (?x0 - instrument ?x1 - satellite)
     :precondition (and (power_on ?x0) (on_board ?x0 ?x1) (calibrated ?x0))
     :effect (and
        (power_avail ?x1)
        (not (power_on ?x0)))
    )


    (:action take_image_1
     :parameters (?x0 - satellite ?x1 - direction ?x2 - instrument ?x3 - mode)
     :precondition (and (pointing ?x0 ?x1) (calibrated ?x2) (power_on ?x2) (on_board ?x2 ?x0) (supports ?x2 ?x3))
     :effect (and
        (have_image ?x1 ?x3))
    )


    (:action switch_on_1
     :parameters (?x0 - instrument ?x1 - satellite)
     :precondition (and (on_board ?x0 ?x1) (power_avail ?x1))
     :effect (and
        (power_on ?x0)
        (not (calibrated ?x0))
        (not (power_avail ?x1)))
    )


    (:action calibrate_1
     :parameters (?x0 - satellite ?x1 - instrument ?x2 - direction)
     :precondition (and (pointing ?x0 ?x2) (on_board ?x1 ?x0) (power_on ?x1) (calibration_target ?x1 ?x2))
     :effect (and
        (calibrated ?x1))
    )


    (:action turn_to_1
     :parameters (?x0 - satellite ?x1 - direction ?x2 - direction)
     :precondition (pointing ?x0 ?x2)
     :effect (and
        (pointing ?x0 ?x1)
        (not (pointing ?x0 ?x2)))
    )

)