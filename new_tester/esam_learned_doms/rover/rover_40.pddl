
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Domain file automatically generated by the Tarski FSTRIPS writer
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (domain rover)
    (:requirements :typing)
    (:types
        rover - object
        waypoint - object
        store - object
        camera - object
        mode - object
        lander - object
        objective - object
        object
    )

    (:constants
        
    )

    (:predicates
        (visible ?x1 - waypoint ?x2 - waypoint)
        (can_traverse ?x1 - rover ?x2 - waypoint ?x3 - waypoint)
        (communicated_rock_data ?x1 - waypoint)
        (equipped_for_rock_analysis ?x1 - rover)
        (have_rock_analysis ?x1 - rover ?x2 - waypoint)
        (supports ?x1 - camera ?x2 - mode)
        (channel_free ?x1 - lander)
        (available ?x1 - rover)
        (empty ?x1 - store)
        (store_of ?x1 - store ?x2 - rover)
        (have_image ?x1 - rover ?x2 - objective ?x3 - mode)
        (have_soil_analysis ?x1 - rover ?x2 - waypoint)
        (communicated_soil_data ?x1 - waypoint)
        (communicated_image_data ?x1 - objective ?x2 - mode)
        (at_soil_sample ?x1 - waypoint)
        (equipped_for_soil_analysis ?x1 - rover)
        (calibrated ?x1 - camera ?x2 - rover)
        (at ?x1 - rover ?x2 - waypoint)
        (full ?x1 - store)
        (visible_from ?x1 - objective ?x2 - waypoint)
        (equipped_for_imaging ?x1 - rover)
        (at_lander ?x1 - lander ?x2 - waypoint)
        (on_board ?x1 - camera ?x2 - rover)
        (calibration_target ?x1 - camera ?x2 - objective)
        (at_rock_sample ?x1 - waypoint)
    )

    (:functions
        
    )

    

    
    (:action communicate_soil_data_1
     :parameters (?x0 - rover ?x1 - lander ?x2 - waypoint ?x3 - waypoint ?x4 - waypoint)
     :precondition (and (have_soil_analysis ?x0 ?x2) (at ?x0 ?x3) (visible ?x3 ?x4) (channel_free ?x1) (visible ?x4 ?x3) (available ?x0) (equipped_for_soil_analysis ?x0) (at_lander ?x1 ?x4))
     :effect (and
        (communicated_soil_data ?x2))
    )


    (:action sample_rock_1
     :parameters (?x0 - rover ?x1 - store ?x2 - waypoint)
     :precondition (and (equipped_for_imaging ?x0) (empty ?x1) (at_soil_sample ?x2) (available ?x0) (equipped_for_rock_analysis ?x0) (at ?x0 ?x2) (at_rock_sample ?x2) (store_of ?x1 ?x0))
     :effect (and
        (full ?x1)
        (have_rock_analysis ?x0 ?x2)
        (not (empty ?x1))
        (not (at_rock_sample ?x2)))
    )


    (:action sample_soil_1
     :parameters (?x0 - rover ?x1 - store ?x2 - waypoint)
     :precondition (and (empty ?x1) (at_soil_sample ?x2) (available ?x0) (at ?x0 ?x2) (equipped_for_soil_analysis ?x0) (store_of ?x1 ?x0))
     :effect (and
        (full ?x1)
        (have_soil_analysis ?x0 ?x2)
        (not (empty ?x1)))
    )


    (:action communicate_rock_data_2
     :parameters (?x0 - rover ?x1 - lander ?x2 - waypoint ?x3 - waypoint)
     :precondition (and (have_rock_analysis ?x0 ?x2) (channel_free ?x1) (visible ?x3 ?x2) (equipped_for_imaging ?x0) (at_lander ?x1 ?x3) (at_soil_sample ?x2) (at ?x0 ?x2) (equipped_for_rock_analysis ?x0) (available ?x0) (visible ?x2 ?x3))
     :effect (and
        (communicated_rock_data ?x2))
    )


    (:action communicate_image_data_1
     :parameters (?x0 - rover ?x1 - lander ?x2 - objective ?x3 - mode ?x4 - waypoint ?x5 - waypoint)
     :precondition (and (at_lander ?x1 ?x5) (visible ?x4 ?x5) (channel_free ?x1) (equipped_for_imaging ?x0) (have_image ?x0 ?x2 ?x3) (at ?x0 ?x4) (can_traverse ?x0 ?x5 ?x4) (visible ?x5 ?x4) (equipped_for_rock_analysis ?x0) (available ?x0) (at_soil_sample ?x4) (equipped_for_soil_analysis ?x0) (visible_from ?x2 ?x4) (at_soil_sample ?x5) (can_traverse ?x0 ?x4 ?x5))
     :effect (and
        (communicated_image_data ?x2 ?x3))
    )


    (:action take_image_1
     :parameters (?x0 - rover ?x1 - waypoint ?x2 - objective ?x3 - camera ?x4 - mode)
     :precondition (and (calibrated ?x3 ?x0) (equipped_for_imaging ?x0) (visible_from ?x2 ?x1) (on_board ?x3 ?x0) (available ?x0) (equipped_for_rock_analysis ?x0) (equipped_for_soil_analysis ?x0) (supports ?x3 ?x4) (at ?x0 ?x1) (at_soil_sample ?x1))
     :effect (and
        (have_image ?x0 ?x2 ?x4)
        (not (calibrated ?x3 ?x0)))
    )


    (:action navigate_1
     :parameters (?x0 - rover ?x1 - waypoint ?x2 - waypoint)
     :precondition (and (can_traverse ?x0 ?x2 ?x1) (visible ?x1 ?x2) (available ?x0) (visible ?x2 ?x1) (can_traverse ?x0 ?x1 ?x2) (at ?x0 ?x1))
     :effect (and
        (at ?x0 ?x2)
        (not (at ?x0 ?x1)))
    )


    (:action communicate_rock_data_3
     :parameters (?x0 - rover ?x1 - lander ?x2 - waypoint ?x3 - waypoint ?x4 - waypoint)
     :precondition (and (at_soil_sample ?x3) (have_rock_analysis ?x0 ?x3) (at ?x0 ?x3) (visible ?x3 ?x4) (have_rock_analysis ?x0 ?x2) (channel_free ?x1) (equipped_for_imaging ?x0) (visible ?x4 ?x2) (at_soil_sample ?x2) (visible ?x4 ?x3) (at ?x0 ?x2) (equipped_for_rock_analysis ?x0) (visible ?x2 ?x4) (available ?x0) (at_lander ?x1 ?x4) (communicated_rock_data ?x3))
     :effect (and
        (communicated_rock_data ?x2))
    )


    (:action drop_1
     :parameters (?x0 - rover ?x1 - store)
     :precondition (and (equipped_for_imaging ?x0) (full ?x1) (available ?x0) (equipped_for_rock_analysis ?x0) (equipped_for_soil_analysis ?x0) (store_of ?x1 ?x0))
     :effect (and
        (empty ?x1)
        (not (full ?x1)))
    )


    (:action communicate_rock_data_1
     :parameters (?x0 - rover ?x1 - lander ?x2 - waypoint ?x3 - waypoint ?x4 - waypoint)
     :precondition (and (at_soil_sample ?x3) (have_rock_analysis ?x0 ?x3) (at ?x0 ?x3) (visible ?x3 ?x4) (have_rock_analysis ?x0 ?x2) (channel_free ?x1) (equipped_for_imaging ?x0) (visible ?x4 ?x2) (at_soil_sample ?x2) (visible ?x4 ?x3) (at ?x0 ?x2) (equipped_for_rock_analysis ?x0) (visible ?x2 ?x4) (available ?x0) (at_lander ?x1 ?x4) (communicated_rock_data ?x2))
     :effect (and
        (communicated_rock_data ?x3))
    )


    (:action calibrate_1
     :parameters (?x0 - rover ?x1 - camera ?x2 - objective ?x3 - waypoint)
     :precondition (and (at ?x0 ?x3) (equipped_for_imaging ?x0) (available ?x0) (equipped_for_rock_analysis ?x0) (visible_from ?x2 ?x3) (calibration_target ?x1 ?x2) (on_board ?x1 ?x0))
     :effect (and
        (calibrated ?x1 ?x0))
    )

)