
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Domain file automatically generated by the Tarski FSTRIPS writer
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (domain depot)
    (:requirements )
    (:types
        object
    )

    (:constants
        
    )

    (:predicates
        (place ?x1 - object)
        (available ?x1 - object)
        (surface ?x1 - object)
        (lifting ?x1 - object ?x2 - object)
        (at ?x1 - object ?x2 - object)
        (pallet ?x1 - object)
        (on ?x1 - object ?x2 - object)
        (hoist ?x1 - object)
        (in ?x1 - object ?x2 - object)
        (clear ?x1 - object)
        (truck ?x1 - object)
        (crate ?x1 - object)
    )

    (:functions
        
    )

    

    
    (:action drop_3_1
     :parameters (?x0 - object ?x1 - object ?x2 - object ?x3 - object)
     :precondition (and (surface ?x1) (surface ?x2) (lifting ?x0 ?x1) (at ?x2 ?x3) (crate ?x1) (at ?x0 ?x3) (hoist ?x0) (place ?x3) (clear ?x2))
     :effect (and
        (on ?x1 ?x2)
        (clear ?x1)
        (available ?x0)
        (at ?x1 ?x3)
        (not (lifting ?x0 ?x1))
        (not (clear ?x2)))
    )


    (:action unload_4_1
     :parameters (?x0 - object ?x1 - object ?x2 - object ?x3 - object)
     :precondition (and (available ?x0) (surface ?x1) (truck ?x2) (at ?x2 ?x3) (crate ?x1) (in ?x1 ?x2) (at ?x0 ?x3) (hoist ?x0) (place ?x3))
     :effect (and
        (lifting ?x0 ?x1)
        (not (available ?x0))
        (not (in ?x1 ?x2)))
    )


    (:action load_2_1
     :parameters (?x0 - object ?x1 - object ?x2 - object ?x3 - object)
     :precondition (and (surface ?x1) (truck ?x2) (lifting ?x0 ?x1) (at ?x2 ?x3) (crate ?x1) (at ?x0 ?x3) (hoist ?x0) (place ?x3))
     :effect (and
        (available ?x0)
        (in ?x1 ?x2)
        (not (lifting ?x0 ?x1)))
    )


    (:action lift_1_1
     :parameters (?x0 - object ?x1 - object ?x2 - object ?x3 - object)
     :precondition (and (clear ?x1) (available ?x0) (surface ?x1) (at ?x1 ?x3) (surface ?x2) (at ?x2 ?x3) (crate ?x1) (on ?x1 ?x2) (hoist ?x0) (place ?x3) (at ?x0 ?x3))
     :effect (and
        (lifting ?x0 ?x1)
        (clear ?x2)
        (not (clear ?x1))
        (not (available ?x0))
        (not (at ?x1 ?x3))
        (not (on ?x1 ?x2)))
    )


    (:action drive_5_1
     :parameters (?x0 - object ?x1 - object ?x2 - object)
     :precondition (and (place ?x2) (at ?x0 ?x1) (truck ?x0) (place ?x1))
     :effect (and
        (at ?x0 ?x2)
        (not (at ?x0 ?x1)))
    )

)